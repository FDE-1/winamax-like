name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    name: Build Docker images
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Compose
        run: |
          docker-compose build

  test-match-service:
    name: Test Match Service
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: Start services
        run: docker-compose up -d match-service redis postgres kafka zookeeper
      - name: Run tests
        run: docker-compose run --rm match-service npm test -- --detectOpenHandles --forceExit

  test-user-service:
    name: Test User Service
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: Start services
        run: docker-compose up -d user-service redis postgres
      - name: Run tests
        run: docker-compose run --rm user-service npm test -- --detectOpenHandles --forceExit

  test-gamification-service:
    name: Test Gamification Service
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: Start services
        run: docker-compose up -d gamification-service redis postgres kafka user-service
      - name: Run tests
        run: docker-compose run --rm gamification-service npm test -- --runInBand --forceExit

  test-notification-service:
    name: Test Notification Service
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: Start services
        run: docker-compose up -d notification-service postgres kafka
      - name: Run tests
        run: docker-compose run --rm notification-service npm test -- --runInBand --forceExit
